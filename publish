#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');

const version = process.argv[2];

if (!version) {
  console.error('Version required!');
  process.exit(1);
} else if (!version.match(/^\d+\.\d+\.\d+$/)) {
  console.error(`Invalid version ${version}`);
  process.exit(1);
}

function run(command) {
  return new Promise((resolve, reject) => {
    exec(command, (error, stdout, stderr) => {
      if (error) {
        reject(error);
      }
      resolve(stdout);
    });
  });
}

async function publishVersion(file) {
  const data = require(file);
  data.version = version;
  const dir = path.dirname(file);
  fs.writeFileSync(file, JSON.stringify(data, null, 2), 'utf8');
  try {
    const output = await run(`cd ${dir} && npm publish`);
    console.info(output);
  } catch(err) {
    console.info('Failed:', err);
    process.exit(1);
  }
}

(async () => {
  await publishVersion('./package.json');
  await publishVersion('./config/package.json');
  console.info('Done!');
})();
